<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright 2016 Open Networking Laboratory ~ ~ Licensed under the Apache License, Version 2.0 (the "License"); ~ you may not use this file except in compliance with the License. ~ You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 ~ ~ Unless required by applicable law or agreed to in writing, software ~ distributed under the License is distributed on an "AS IS" BASIS, ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the License for the specific language governing permissions and ~ limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>onos-drivers-microsemi</artifactId>
        <groupId>org.onosproject</groupId>
        <version>1.11.0-SNAPSHOT</version>
    </parent>

    <artifactId>onos-drivers-microsemi-ea1000yang</artifactId>
    <packaging>bundle</packaging>

    <description>Microsemi YANG model for EA1000</description>
    <url>http://www.microsemi.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <onos.version>${project.version}</onos.version>
        <onos.app.name>org.onosproject.drivers.microsemi.yang</onos.app.name>
        <onos.app.title>Microsemi Device Drivers YANG</onos.app.title>
        <onos.app.origin>Microsemi, Inc.</onos.app.origin>
        <onos.app.category>Drivers</onos.app.category>
        <onos.app.url>http://onosproject.org</onos.app.url>
        <onos.app.readme>For various Microsemi Devices including EdgeAssure
            1000 SFP-NID</onos.app.readme>
        <onos.yang.version>1.11</onos.yang.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onos-netconf-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onos-yang-utils-generator</artifactId>
            <version>${onos.yang.version}</version>
        </dependency>

        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onos-yang-datamodel</artifactId>
            <version>${onos.yang.version}</version>
        </dependency>

        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onos-app-yms-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onlab-junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onos-app-yms</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.onosproject</groupId>
            <artifactId>onos-drivers-netconf</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.onosproject</groupId>
                <artifactId>onos-yang-maven-plugin</artifactId>
                <version>${onos.yang.version}</version>
                <executions>
                    <execution>
                        <configuration>
                            <classFileDir>target/generated-sources</classFileDir>
                        </configuration>
                        <goals>
                            <goal>yang2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Include-Resource>yang/resources/YangMetaData.ser=target/classes/yang/resources/YangMetaData.ser</Include-Resource>
                    </instructions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>onos-yang-plugin-workaround</id>
                        <!-- yang plugin cannot handle non-clean compilation -->
                        <phase>initialize</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>target/generated-sources</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/delaymeasurement/*</exclude>
                        <exclude>**/lossmeasurement/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
